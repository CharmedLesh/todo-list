var w=Object.defineProperty;var M=(n,e,s)=>e in n?w(n,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):n[e]=s;var m=(n,e,s)=>(M(n,typeof e!="symbol"?e+"":e,s),s);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))t(o);new MutationObserver(o=>{for(const a of o)if(a.type==="childList")for(const r of a.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&t(r)}).observe(document,{childList:!0,subtree:!0});function s(o){const a={};return o.integrity&&(a.integrity=o.integrity),o.referrerPolicy&&(a.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?a.credentials="include":o.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function t(o){if(o.ep)return;o.ep=!0;const a=s(o);fetch(o.href,a)}})();let f;const P=new Uint8Array(16);function F(){if(!f&&(f=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!f))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return f(P)}const h=[];for(let n=0;n<256;++n)h.push((n+256).toString(16).slice(1));function U(n,e=0){return h[n[e+0]]+h[n[e+1]]+h[n[e+2]]+h[n[e+3]]+"-"+h[n[e+4]]+h[n[e+5]]+"-"+h[n[e+6]]+h[n[e+7]]+"-"+h[n[e+8]]+h[n[e+9]]+"-"+h[n[e+10]]+h[n[e+11]]+h[n[e+12]]+h[n[e+13]]+h[n[e+14]]+h[n[e+15]]}const R=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),I={randomUUID:R};function D(n,e,s){if(I.randomUUID&&!e&&!n)return I.randomUUID();n=n||{};const t=n.random||(n.rng||F)();if(t[6]=t[6]&15|64,t[8]=t[8]&63|128,e){s=s||0;for(let o=0;o<16;++o)e[s+o]=t[o];return e}return U(t)}class C{constructor({title:e,isChecked:s}){m(this,"id");m(this,"title");m(this,"isChecked");this.id=D(),this.title=e,this.isChecked=s}getId(){return this.id}check(){this.isChecked=!this.isChecked}editTitle(e){this.title=e}}class A{constructor({key:e}){m(this,"key");this.key=e}set(e){try{localStorage.setItem(this.key,JSON.stringify(e))}catch(s){console.error(s)}}get(){try{const e=localStorage.getItem(this.key);return e?JSON.parse(e):null}catch(e){return console.error(e),null}}}class k{static addToClassNameList(e,s){if(typeof e=="string"&&s.classList.add(e),Array.isArray(e))for(const t of e)s.classList.add(t)}static removeFromClassNameList(e,s){if(typeof e=="string"&&s.classList.remove(e),Array.isArray(e))for(const t of e)s.classList.remove(t)}static conditionalClassName(e,s,t){e?s.classList.add(t):s.classList.remove(t)}}const v="js-todo-list",j=`${v}__title`,$="js-create-task",K=`${$}__input`,O=`${$}__button`,q="js-task-list",V=`${v}__toolbar`,g="js-progress-bar",J=`${g}__progress`,_=`${g}__text`,z=`${g}__number-completed`,G=`${g}__number-total`,Q="js-remove-checked-button",d={todoListClassNames:{todoListClassName:v,todoListTitleClassName:j,todoListToolBarClassName:V},createTaskClassNames:{createTaskFormClassName:$,createTaskInputClassName:K,createTaskButtonClassName:O},taskListClassName:q,progressBarClassNames:{progressBarClassName:g,progressBarProgressClassName:J,progressBarTextClassName:_,progressBarCompletedNumberClassName:z,progressBarTotalNumberClassName:G},removeCheckedButtonClassName:Q},L="js-task",W=`${L}--checked`,X=`${L}__checkbox`,E=`${L}__input`,Y=`${E}--checked`,B=`${L}__button`,Z=`${B}--highlight`,ee=`${B}--edit-button`,se=`${B}--remove-button`,l={taskLiClass:L,taskLiCheckedClass:W,taskCheckboxClass:X,taskInputClass:E,taskInputCheckedClass:Y,taskButtonClass:B,taskButtonHighlightClass:Z,taskEditButtonClass:ee,taskRemoveButtonClass:se},te='<svg width="16px" height="16px" viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg"><path d="M0 0h48v48H0z" fill="none"/><g id="Shopicon"><rect x="33.172" y="4.343" transform="matrix(0.7071 -0.7071 0.7071 0.7071 3.473 29.5565)" width="8.485" height="12.485"/><polygon points="27.172,12 4,35.172 4,44 12.829,44 38.829,18 36,20.828"/></g></svg>',y='<svg width="16px" height="16px"	viewBox="0 0 16 16"	xmlns="http://www.w3.org/2000/svg"><g><polygon points="13.63 3.65 12.35 2.38 8 6.73 3.64 2.38 2.37 3.65 6.72 8.01 2.38 12.35 3.65 13.63 8 9.28 12.35 13.64 13.63 12.36 9.27 8.01 13.63 3.65"/></g></svg>';class c{static createH1(e,s,t){const o=document.createElement("h1");return e&&k.addToClassNameList(e,o),s&&(o.id=s),t&&(o.innerText=t),o}static createSpan(e,s,t){const o=document.createElement("span");return e&&k.addToClassNameList(e,o),s&&(o.id=s),t&&(o.innerText=t),o}static createForm(e,s,t){const o=document.createElement("form");return e&&k.addToClassNameList(e,o),s&&(o.id=s),typeof t=="boolean"&&(o.autocomplete=t?"on":"off"),o}static createDiv(e,s,t){const o=document.createElement("div");return e&&k.addToClassNameList(e,o),s&&(o.id=s),t&&(o.innerText=t),o}static createUL(e,s){const t=document.createElement("ul");return e&&k.addToClassNameList(e,t),s&&(t.id=s),t}static createLi(e){const s=document.createElement("li");return e&&k.addToClassNameList(e,s),s}static createCheckbox(e,s){const t=document.createElement("input");return t.type="checkbox",s&&(t.checked=s),e&&k.addToClassNameList(e,t),t}static createInput(e,s,t,o,a,r){const i=document.createElement("input");return i.spellcheck=!1,e&&k.addToClassNameList(e,i),s&&(i.id=s),t&&(i.value=t),o&&(i.placeholder=o),a&&(i.type=a),r&&(i.disabled=r),i}static createButton(e,s,t,o){const a=document.createElement("button");return e&&k.addToClassNameList(e,a),s&&(a.id=s),o&&t?a.innerHTML=`${t} ${o}`:(t&&(a.innerHTML=t),o&&(a.innerHTML=o)),a}static createP(e,s){const t=document.createElement("p");return e&&k.addToClassNameList(e,t),s&&(t.id=s),t}static createTodoListApp(e){const s=c.createDiv(d.todoListClassNames.todoListClassName,e.todoListId),t=c.createH1(d.todoListClassNames.todoListTitleClassName,void 0,"TODOLIST"),o=c.createDiv(d.todoListClassNames.todoListToolBarClassName),a=c.createForm(d.createTaskClassNames.createTaskFormClassName,e.createTaskFormId,!1),r=c.createInput(d.createTaskClassNames.createTaskInputClassName,e.createTaskInputId,void 0,"what needs to be done?","text",!1),i=c.createButton(d.createTaskClassNames.createTaskButtonClassName,void 0,"+");a.append(r,i);const u=c.createUL(d.taskListClassName,e.taskListId),T=c.createDiv(d.progressBarClassNames.progressBarClassName),b=c.createDiv(d.progressBarClassNames.progressBarProgressClassName,e.progressBarProgressId),N=c.createP(d.progressBarClassNames.progressBarTextClassName),x=c.createSpan(d.progressBarClassNames.progressBarCompletedNumberClassName,e.progressBarCompletedTasksNumberId),S=c.createSpan(d.progressBarClassNames.progressBarTotalNumberClassName,e.progressBarTotalTasksNumberId);N.append(x," of ",S," tasks done"),T.append(b,N);const H=c.createButton(d.removeCheckedButtonClassName,e.removeCheckedButtonId,"Remove checked",y);return o.append(T,H),s.append(t,a,u,o),s}static createTaskElement(e){const s=c.createLi(l.taskLiClass),t=c.createCheckbox(l.taskCheckboxClass,e.isChecked);k.conditionalClassName(e.isChecked,s,l.taskLiCheckedClass);const o=c.createInput(l.taskInputClass,void 0,e.title,void 0,"text",!0);k.conditionalClassName(e.isChecked,o,l.taskInputCheckedClass),o.addEventListener("blur",()=>o.focus());const a=c.createButton([l.taskButtonClass,l.taskEditButtonClass],void 0,void 0,te),r=c.createButton([l.taskButtonClass,l.taskRemoveButtonClass],void 0,void 0,y);return s.append(t,o,a,r),s}static createMultipleTaskElements(e){let s=[];for(const t of e){const o=c.createTaskElement(t);s.push(o)}return s}}class p{static renderElementInBody(e){e?document.body.append(e):console.error("id for todo list not provided")}static renderTask(e,s){s?e?s.append(e):console.error("HTMLLIElement not provided"):console.error("HTMLUListElement not provided")}static renderTaskList(e,s){if(s)for(const t of e)p.renderTask(t,s);else console.error("HTMLUListElement not provided")}static rerenderProgressBar(e,s,t,o){const a=e.length,r=e.reduce((i,u)=>i+(u.isChecked?1:0),0);if(s){const i=r/a*100;i?s.style.width=`${i}%`:s.style.width="0%"}else console.error("HTMLDivElement not provided");t?t.innerHTML=r.toString():console.error("HTMLSpanElement not provided"),o?o.innerHTML=a.toString():console.error("HTMLSpanElement not provided")}static unrenderAllCheckedFromTaskList(e){if(e){const s=e.children;for(let t=0;t<s.length;t++){const o=s[t];o.children[0].checked&&(o.remove(),t--)}}else console.error("HTMLUListElement not provided")}}class oe{constructor({key:e,$taskList:s}){m(this,"localStorage");m(this,"$taskList");m(this,"tasks");m(this,"onTaskListModified",null);m(this,"taskInputKeyUpHandler",e=>{if(e.code==="Escape"||e.code==="Enter"){const s=e.target;if(s){const t=s.closest(`.${l.taskLiClass}`),o=t.children[0],a=t.children[1],r=t.children[2],i=[...t.parentNode.children].indexOf(t);this.taskEditButtonClickHandler(r,a,i,o.checked)}}});this.localStorage=new A({key:e}),this.$taskList=s,this.tasks=this.initTasksArray(),this.init()}initTasksArray(){const e=this.localStorage.get();if(e){let s=[];for(const t of e){const o=new C({title:t.title,isChecked:t.isChecked});s.push(o)}return s}return[]}init(){if(this.$taskList){const e=c.createMultipleTaskElements(this.tasks);p.renderTaskList(e,this.$taskList),this.addTaskListEventListeners(this.$taskList)}else console.error("HTMLUListElement not provided")}setOnTaskListModified(e){this.onTaskListModified=e}callOnTaskListModified(){this.onTaskListModified&&this.onTaskListModified()}save(){this.localStorage.set(this.tasks),this.callOnTaskListModified()}push(e){this.tasks.push(e),this.save()}check(e){if(e instanceof C)e.check();else{const s=this.tasks.findIndex(t=>t.id===e);this.tasks[s].check()}this.save()}edit(e,s){if(e instanceof C)e.editTitle(s);else{const t=this.tasks.findIndex(o=>o.id===e);this.tasks[t].editTitle(s)}this.save()}remove(e){const s=e instanceof C?e.getId():e;this.tasks=this.tasks.filter(t=>t.id!==s),this.save()}removeAllChecked(){this.tasks=this.tasks.filter(e=>e.isChecked===!1),this.save()}addTaskListEventListeners(e){this.addTaskListOnClickEventListener(e),this.addTaskListOnKeyUpEventListener(e)}addTaskListOnClickEventListener(e){e.addEventListener("click",s=>{const t=s.target,o=t.closest(`.${l.taskLiClass}`),a=o.children[0],r=o.children[1],i=o.children[2],u=[...o.parentNode.children].indexOf(o);t&&(t.classList.contains(l.taskCheckboxClass)&&this.taskCheckboxClickHandler(o,u,t.checked,r),(t.classList.contains(l.taskEditButtonClass)||t.closest(`.${l.taskEditButtonClass}`))&&this.taskEditButtonClickHandler(i,r,u,a.checked),(t.classList.contains(l.taskRemoveButtonClass)||t.closest(`.${l.taskRemoveButtonClass}`))&&this.taskRemoveButtonClickHandler(o,u,r))})}taskCheckboxClickHandler(e,s,t,o){k.conditionalClassName(t,e,l.taskLiCheckedClass),o.disabled&&k.conditionalClassName(t,o,l.taskInputCheckedClass),this.check(this.tasks[s])}taskEditButtonClickHandler(e,s,t,o){if(s.disabled){const a=document.querySelectorAll("button");for(let i=0;i<a.length;i++)a[i]!==e&&(a[i].disabled=!0);const r=document.querySelectorAll("input[type='checkbox']");for(let i=0;i<r.length;i++)r[i].disabled=!0;k.addToClassNameList(l.taskButtonHighlightClass,e),k.removeFromClassNameList(l.taskInputCheckedClass,s),s.disabled=!1,s.focus()}else if(s.value){const a=document.querySelectorAll("button");for(let i=0;i<a.length;i++)a[i].disabled=!1;const r=document.querySelectorAll("input[type='checkbox']");for(let i=0;i<r.length;i++)r[i].disabled=!1;k.conditionalClassName(o,s,l.taskInputCheckedClass),k.removeFromClassNameList(l.taskButtonHighlightClass,e),s.disabled=!0,this.edit(this.tasks[t],s.value)}else s.focus()}taskRemoveButtonClickHandler(e,s,t){this.remove(this.tasks[s]),t.removeEventListener("blur",()=>t.focus()),e.remove()}addTaskListOnKeyUpEventListener(e){e.addEventListener("keyup",this.taskInputKeyUpHandler)}}class ae{constructor({appId:e,key:s}){m(this,"taskList");m(this,"ids");m(this,"elements");this.ids=this.initElementsIds(e);const t=c.createTodoListApp(this.ids);p.renderElementInBody(t),this.elements=this.initElementsObject(),this.taskList=new oe({key:s,$taskList:this.elements.$taskList}),this.init()}init(){this.initCallbackToRerenderProgressBarOnTaskListChange(),this.initProgressBarRender(),this.initEventListeners()}initElementsIds(e){const s=`${d.todoListClassNames.todoListClassName}--${e}`,t=`${d.createTaskClassNames.createTaskFormClassName}--${e}`,o=`${d.createTaskClassNames.createTaskInputClassName}--${e}`,a=`${d.taskListClassName}--${e}`,r=`${d.progressBarClassNames.progressBarProgressClassName}--${e}`,i=`${d.progressBarClassNames.progressBarCompletedNumberClassName}--${e}`,u=`${d.progressBarClassNames.progressBarTotalNumberClassName}--${e}`,T=`${d.removeCheckedButtonClassName}--${e}`;return{todoListId:s,createTaskFormId:t,createTaskInputId:o,taskListId:a,progressBarProgressId:r,progressBarCompletedTasksNumberId:i,progressBarTotalTasksNumberId:u,removeCheckedButtonId:T}}initElementsObject(){const e=document.getElementById(this.ids.createTaskFormId),s=document.getElementById(this.ids.createTaskInputId),t=document.getElementById(this.ids.taskListId),o=document.getElementById(this.ids.progressBarProgressId),a=document.getElementById(this.ids.progressBarCompletedTasksNumberId),r=document.getElementById(this.ids.progressBarTotalTasksNumberId),i=document.getElementById(this.ids.removeCheckedButtonId);return{$taskList:t,$createTaskForm:e,$createTaskInput:s,$progressBarProgress:o,$progressBarCompletedTasksNumber:a,$progressBarTotalTasksNumber:r,$removeAllCheckedTasksButton:i}}initCallbackToRerenderProgressBarOnTaskListChange(){const e=()=>{p.rerenderProgressBar(this.taskList.tasks,this.elements.$progressBarProgress,this.elements.$progressBarCompletedTasksNumber,this.elements.$progressBarTotalTasksNumber)};this.taskList.setOnTaskListModified(e)}initProgressBarRender(){this.elements.$progressBarTotalTasksNumber?this.elements.$progressBarCompletedTasksNumber?this.elements.$progressBarProgress?p.rerenderProgressBar(this.taskList.tasks,this.elements.$progressBarProgress,this.elements.$progressBarCompletedTasksNumber,this.elements.$progressBarTotalTasksNumber):console.error(`${this.ids.progressBarProgressId} not found`):console.error(`${this.ids.progressBarCompletedTasksNumberId} not found`):console.error(`${this.ids.progressBarTotalTasksNumberId} not found`)}initEventListeners(){this.elements.$taskList?(this.elements.$createTaskForm?this.elements.$createTaskInput?this.applyListenerOnSubmitNewTaskEvent(this.elements.$createTaskForm,this.elements.$createTaskInput,this.elements.$taskList):console.error(`${this.ids.createTaskInputId} not found`):console.error(`${this.ids.createTaskFormId} not found`),this.elements.$removeAllCheckedTasksButton?this.applyListenerOnRemoveAllCheckedTasksEvent(this.elements.$removeAllCheckedTasksButton,this.elements.$taskList):console.error(`${this.ids.removeCheckedButtonId} not found`)):console.error(`${this.ids.taskListId} not found`)}applyListenerOnSubmitNewTaskEvent(e,s,t){e.addEventListener("submit",o=>{if(o.preventDefault(),s.value){const a=new C({title:s.value,isChecked:!1});this.taskList.push(a);const r=c.createTaskElement(a);p.renderTask(r,t),s.value=""}})}applyListenerOnRemoveAllCheckedTasksEvent(e,s){e.addEventListener("click",()=>{this.taskList.tasks.length&&(this.taskList.removeAllChecked(),p.unrenderAllCheckedFromTaskList(s))})}}new ae({appId:"example",key:"TASKS"});
